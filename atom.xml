<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jun&#39;s Blog</title>
  
  
  <link href="http://junn.im/atom.xml" rel="self"/>
  
  <link href="http://junn.im/"/>
  <updated>2023-09-26T15:51:06.139Z</updated>
  <id>http://junn.im/</id>
  
  <author>
    <name>Jun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在树莓派上部署teslamate</title>
    <link href="http://junn.im/2023/09/install-teslamate-in-raspberrypi/"/>
    <id>http://junn.im/2023/09/install-teslamate-in-raspberrypi/</id>
    <published>2023-09-23T16:00:00.000Z</published>
    <updated>2023-09-26T15:51:06.139Z</updated>
    
    <content type="html"><![CDATA[<p>Tesla官方app内容比较简单，没有行程数据、电量消耗等数据，车主其实都很在意这些数据，我平时就用<a href="https://tezlabapp.com/">TezLab</a>应用了解这些数据，感觉还不错。这两天了解到还有个TeslaMate应用可以呈现这些数据，刚好手上有台刷了<a href="https://retropie.org.uk/">RetroPie</a>当怀旧游戏机但一直吃灰很多年的<a href="https://www.raspberrypi.com/products/raspberry-pi-3-model-b/">Raspberry Pi 3 Model B</a>，于是打算折腾下，在树莓派上部署TeslaMate。</p><span id="more"></span><p>3B的内存是1G，刚好达到了<a href="https://docs.teslamate.org/docs/installation/docker#requirements">TeslaMate的要求</a>，所以接下去就是在树莓派上安装Docker就行了。网上搜了一些教程，都是两三年前的方法，有些代码已经过时没用了，所以我就跟着官方的方法走下去。</p><p><strong>第一步：下载Raspberry Pi Imager</strong></p><p>官网下载地址：<a href="https://www.raspberrypi.com/software/">https://www.raspberrypi.com/software/</a>，给树莓派SD卡刷系统用的。</p><p><strong>第二步：给树莓派SD卡刷系统</strong></p><p>把SD卡链接电脑，用Raspberry Pi Imager给树莓派SD卡刷系统。</p><p><img src="https://s2.loli.net/2023/09/24/A2dwE8H1MZIiY3m.png" alt="pi1"><br>因为我是3B，所以选的系统是<a href="https://www.raspberrypi.com/software/operating-systems/">64位更适配</a>。</p><p><img src="https://s2.loli.net/2023/09/24/A2dwE8H1MZIiY3m.png" alt="pi2"></p><p>在高级设置中开启SSH服务，username和密码自己设，设置完后点烧录。</p><p><strong>第三步：给树莓派安装Docker</strong></p><p>把烧录完后的SD卡插到树莓派上，通电通网，树莓派和电脑要在同一局域网内。可以在路由器后台找到树莓派的IP地址，也可以通过软件找，Windows用<a href="https://www.advanced-ip-scanner.com/">Advanced IP Scanner</a>，Mac用<a href="https://apps.apple.com/us/app/lanscan/id472226235?mt=12">LanScan</a>。然后通过SSH链接树莓派，Windows用putty，Mac用terminal，以Mac为例，终端中输入：</p><p><code>ssh 你的树莓派用户名@树莓派的IP地址</code> 树莓派用户名就是上面的Username。</p><p>tip1 这里如果遇到这类提示：</p><blockquote><p>ECDSA host key for 树莓派IP地址 has changed and you have requested strict checking</p></blockquote><p>输入<code>ssh-keygen -R 树莓派IP地址</code>解决。</p><p>进入树莓派后台，接下去就是按照<a href="https://docs.teslamate.org/docs/installation/docker#requirements">Teslamate要求</a>安装Docker和Docker Compose。</p><p>在<a href="https://docs.docker.com/engine/install/raspberry-pi-os/#os-requirements">Docker</a>树莓派的<code>OS requirements</code>页面中：</p><blockquote><p>This installation instruction refers to the 32-bit (armhf) version of Raspberry Pi OS. If you’re using the 64-bit (arm64) version, follow the instructions for Debian.</p></blockquote><p>由于上面的树莓派系统安装的是64位，所以要按照<a href="https://docs.docker.com/engine/install/debian/">Debian</a>的流程操作。</p><p>3.1 <a href="https://docs.docker.com/engine/install/debian/#install-using-the-repository">Set up Docker’s Apt repository</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install ca-certificates curl gnupg</span><br><span class="line">sudo install -m 0755 -d /etc/apt/keyrings</span><br><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg</span><br><span class="line">sudo chmod a+r /etc/apt/keyrings/docker.gpg</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo \</span><br><span class="line">  &quot;deb [arch=&quot;$(dpkg --print-architecture)&quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \</span><br><span class="line">  &quot;$(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;)&quot; stable&quot; | \</span><br><span class="line">  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line">  </span><br><span class="line">  sudo apt-get update</span><br></pre></td></tr></table></figure><p>3.2 Install the Docker packages.</p><p><code>sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</code></p><p>3.3 安装确认</p><p><code>sudo docker run hello-world</code></p><p>安装成功的话，会有这么一段话：</p><blockquote><p>Hello from Docker!<br>This message shows that your installation appears to be working correctly.</p></blockquote><p><strong>第四步：安装Docker Compose</strong></p><p>其实实测第三步做完之后已经有compose了，不过还是按照官方再来一次。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-compose-plugin</span><br></pre></td></tr></table></figure><p>验证安装 <code>sudo docker compose version</code>，会显示 <code>Docker Compose version v2.21.0</code>，这样就显示compose也安装完成了。</p><p><strong>第五步：安装Docker Compose</strong></p><p>安装TeslaMate要求，编写<code>docker-compose.yml</code><a href="https://docs.teslamate.org/docs/installation/docker#instructions">文件</a>。在terminal中输入<code>nano docker-compose.yml</code>就能新建一个yml文件了，然后填入以下内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">version: &quot;3&quot;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  teslamate:</span><br><span class="line">    image: teslamate/teslamate:latest</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - ENCRYPTION_KEY=#insert a secure key to encrypt your Tesla API tokens</span><br><span class="line">      - DATABASE_USER=teslamate</span><br><span class="line">      - DATABASE_PASS=#insert your secure database password!</span><br><span class="line">      - DATABASE_NAME=teslamate</span><br><span class="line">      - DATABASE_HOST=database</span><br><span class="line">      - MQTT_HOST=mosquitto</span><br><span class="line">    ports:</span><br><span class="line">      - 4000:4000</span><br><span class="line">    volumes:</span><br><span class="line">      - ./import:/opt/app/import</span><br><span class="line">    cap_drop:</span><br><span class="line">      - all</span><br><span class="line"></span><br><span class="line">  database:</span><br><span class="line">    image: postgres:15</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - POSTGRES_USER=teslamate</span><br><span class="line">      - POSTGRES_PASSWORD=#insert your secure database password!</span><br><span class="line">      - POSTGRES_DB=teslamate</span><br><span class="line">    volumes:</span><br><span class="line">      - teslamate-db:/var/lib/postgresql/data</span><br><span class="line"></span><br><span class="line">  grafana:</span><br><span class="line">    image: teslamate/grafana:latest</span><br><span class="line">    restart: always</span><br><span class="line">    environment:</span><br><span class="line">      - DATABASE_USER=teslamate</span><br><span class="line">      - DATABASE_PASS=#insert your secure database password!</span><br><span class="line">      - DATABASE_NAME=teslamate</span><br><span class="line">      - DATABASE_HOST=database</span><br><span class="line">    ports:</span><br><span class="line">      - 3000:3000</span><br><span class="line">    volumes:</span><br><span class="line">      - teslamate-grafana-data:/var/lib/grafana</span><br><span class="line"></span><br><span class="line">  mosquitto:</span><br><span class="line">    image: eclipse-mosquitto:2</span><br><span class="line">    restart: always</span><br><span class="line">    command: mosquitto -c /mosquitto-no-auth.conf</span><br><span class="line">    # ports:</span><br><span class="line">    #   - 1883:1883</span><br><span class="line">    volumes:</span><br><span class="line">      - mosquitto-conf:/mosquitto/config</span><br><span class="line">      - mosquitto-data:/mosquitto/data</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  teslamate-db:</span><br><span class="line">  teslamate-grafana-data:</span><br><span class="line">  mosquitto-conf:</span><br><span class="line">  mosquitto-data:</span><br></pre></td></tr></table></figure><p>有四个<code>#insert</code>的字段，设置成你要的密码，另外注意这里等号后面有个空格，把空格删除。填入完成后键盘按 ctrl+字母O，然后按ctrl+x退出编辑界面。</p><p>最后<code>docker compose up -d</code>启动docker</p><p><strong>第六步：登录TeslaMate</strong></p><p>1、打开网页：http:&#x2F;&#x2F;树莓派的IP地址:4000<br>2、用你的tesla账号登录，然后还要用到tesla token，可以用<a href="https://docs.teslamate.org/docs/faq/#how-to-generate-your-own-tokens">这几个app</a>获得。<br>3、Grafana面板网址：http:&#x2F;&#x2F;树莓派的IP地址:3000，默认用户名和密码都是admin。</p><p>到此为止，TeslaMate已经搭建完成并成功访问。树莓派要一直通电运行才能收取记录数据。</p><p>参考：<br>1、<a href="https://www.youtube.com/watch?v=aWmEoM4qjKI">Instalar TESLAMATE en Raspberry Pi 3 o 4. Actualizado Dic. 2022</a><br>2、<a href="https://docs.teslamate.org/docs/installation/docker">TeslaMate Docs</a><br>3、<a href="https://docs.docker.com/engine/install/">Docker Docs</a><br>4、<a href="https://dev.to/rohansawant/installing-docker-and-docker-compose-on-the-raspberry-pi-in-5-simple-steps-3mgl">Installing Docker and Docker Compose on the Raspberry Pi in 5 Simple Steps</a>（有些不适用了)</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Tesla官方app内容比较简单，没有行程数据、电量消耗等数据，车主其实都很在意这些数据，我平时就用&lt;a href=&quot;https://tezlabapp.com/&quot;&gt;TezLab&lt;/a&gt;应用了解这些数据，感觉还不错。这两天了解到还有个TeslaMate应用可以呈现这些数据，刚好手上有台刷了&lt;a href=&quot;https://retropie.org.uk/&quot;&gt;RetroPie&lt;/a&gt;当怀旧游戏机但一直吃灰很多年的&lt;a href=&quot;https://www.raspberrypi.com/products/raspberry-pi-3-model-b/&quot;&gt;Raspberry Pi 3 Model B&lt;/a&gt;，于是打算折腾下，在树莓派上部署TeslaMate。&lt;/p&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://junn.im/categories/Programming/"/>
    
    
    <category term="tesla" scheme="http://junn.im/tags/tesla/"/>
    
    <category term="teslamate" scheme="http://junn.im/tags/teslamate/"/>
    
    <category term="raspberrypi" scheme="http://junn.im/tags/raspberrypi/"/>
    
  </entry>
  
  <entry>
    <title>升级Mac自带Python版本</title>
    <link href="http://junn.im/2019/04/update-python-for-mac/"/>
    <id>http://junn.im/2019/04/update-python-for-mac/</id>
    <published>2019-04-09T16:00:00.000Z</published>
    <updated>2023-09-26T15:56:20.084Z</updated>
    
    <content type="html"><![CDATA[<p>最近捡起荒废已久的Python从头开始学，在安装<code>pyinstaller</code>时发现Mac自带的2.7版本将于2020年停止支持，于是决定升级一下。</p><span id="more"></span><blockquote><p>DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won’t be maintained after that date. A future version of pip will drop support for Python 2.7.</p></blockquote><p><strong>第一步：下载Python最新版本</strong></p><p>官网下载地址：<a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a>，我下的时候最新版为3.7.3</p><p><strong>第二步：安装</strong></p><p>点击下载好的pkg文件进行安装</p><p><strong>第三步：修改Mac自带的python路径</strong></p><p>安装后在终端中输入：<code>python -V</code>，发现默认仍然使用2.7版。在网上查询了下，很多人通过修改根目录下的<code>.bash_profile</code>文件来改变Mac默认的Python路径。我找了半天发现没有这个文件，有两个解决办法：一个是自己新建一个 <code>.bash_profile</code>文件并输入相应代码，另一个是进入<code>/Applications/Python 3.7</code>路径，双击<code>Update Shell Profile.command</code>文件就能在根目录下生成<code>.bash_profile</code>文件。</p><p>打开<code>.bash_profile</code>文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open ~/.bash_profile</span><br></pre></td></tr></table></figure><p>在其中最后一行加入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias python=&quot;/Library/Frameworks/Python.framework/Versions/3.7/bin/python3.7&quot;</span><br></pre></td></tr></table></figure><p><code>.bash_profile</code>文件最终代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># Setting PATH for Python 3.7</span><br><span class="line"># The original version is saved in .bash_profile.pysave</span><br><span class="line">PATH=&quot;/Library/Frameworks/Python.framework/Versions/3.7/bin:$&#123;PATH&#125;&quot;</span><br><span class="line">export PATH</span><br><span class="line">alias python=&quot;/Library/Frameworks/Python.framework/Versions/3.7/bin/python3.7&quot;</span><br></pre></td></tr></table></figure><p>重启一下终端，再用<code>python -V</code>验证一下就可以了。</p><p>嗯，时隔一年多，居然更新了，居然还是博客3周年。争取今年把2018年落下的补上，我这是有多懒😄️。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近捡起荒废已久的Python从头开始学，在安装&lt;code&gt;pyinstaller&lt;/code&gt;时发现Mac自带的2.7版本将于2020年停止支持，于是决定升级一下。&lt;/p&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://junn.im/categories/Programming/"/>
    
    
    <category term="Mac" scheme="http://junn.im/tags/Mac/"/>
    
    <category term="Python" scheme="http://junn.im/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 3配置Python交互环境</title>
    <link href="http://junn.im/2017/03/setting-up-sublime-text-3-for-python3-development/"/>
    <id>http://junn.im/2017/03/setting-up-sublime-text-3-for-python3-development/</id>
    <published>2017-03-26T16:00:00.000Z</published>
    <updated>2023-09-26T16:00:21.878Z</updated>
    
    <content type="html"><![CDATA[<p>今天学Python时遇到如下代码：</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/python3 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 该实例演示了数字猜谜游戏</span></span><br><span class="line">number = 7</span><br><span class="line">guess = -1</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数字猜谜游戏!&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> guess != number:</span><br><span class="line">    guess = int(input(<span class="string">&quot;请输入你猜的数字：&quot;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> guess == number:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;恭喜，你猜对了！&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> guess &lt; number:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;猜的数字小了...&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> guess &gt; number:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;猜的数字大了...&quot;</span>)</span><br></pre></td></tr></table></figure><p>⌘+b执行该段代码后我发现输入数字后，控制台无法进行下一步，无法建立互动，于是Google如何在ST3中建立Python交互环境。</p><p>在用ST3学习Python前，我就安装了以下三个据说是学Python必装的Package：</p><ul><li>SublimeCodeIntel</li><li>SublimeLinter</li><li>SublimeREPL</li></ul><p>其中SublimeREPL就可以搭建起Python交互环境。</p><h2 id="修改SublimeREPL"><a href="#修改SublimeREPL" class="headerlink" title="修改SublimeREPL"></a>修改SublimeREPL</h2><p>选择<code>Tools</code>-<code>SublimeREPL</code>-<code>Python</code>-<code>Python-RUN current file</code>，就可以建立起上述代码的交互环境。当我点击了<code>Python-RUN current file</code>ST3又报错，一看还是编码问题，看来还得像上一篇文章一样调整一下SublimeREPL的Python编码。在<code>/Users/你的用户名/Library/Application Support/Sublime Text 3/Packages/SublimeREPL/config/Python</code>或者<code>Preferences-Browse Packages...-SublimeREPL-config-Python</code>路径中找到<code>Main.sublime-menu</code>这个文件打开，定位到<code>caption&quot;: &quot;Python - RUN current file&quot;</code>那块，原始代码为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line"><span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - RUN current file&quot;</span>,</span><br><span class="line"><span class="string">&quot;id&quot;</span>: <span class="string">&quot;repl_python_run&quot;</span>,</span><br><span class="line"><span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;R&quot;</span>,</span><br><span class="line"><span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line"><span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;<span class="variable">$file_basename</span>&quot;</span>],</span><br><span class="line"><span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line"><span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line"><span class="string">&quot;extend_env&quot;</span>: &#123;<span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我改成下面这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,</span><br><span class="line"><span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - RUN current file&quot;</span>,</span><br><span class="line"><span class="string">&quot;id&quot;</span>: <span class="string">&quot;repl_python_run&quot;</span>,</span><br><span class="line"><span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;R&quot;</span>,</span><br><span class="line"><span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line"><span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;-i&quot;</span>, <span class="string">&quot;<span class="variable">$file_basename</span>&quot;</span>],</span><br><span class="line"><span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line"><span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line"><span class="string">&quot;extend_env&quot;</span>: &#123;<span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>这样就解决了<code>RUN current file</code>时的编码问题。但这样还有一个问题，每次需要交互，必须要点击菜单栏Tools然后一层层点进去才能跑代码，还需要设置一个快捷键。</p><h2 id="设置快捷键"><a href="#设置快捷键" class="headerlink" title="设置快捷键"></a>设置快捷键</h2><p>在<code>Preferences-Key Bindings</code>进行快捷键设置。在显示的文件名为<code>Default (OSX).sublime-keymap - User</code>文档的两个方括号间粘贴如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="string">&quot;keys&quot;</span>: [<span class="string">&quot;ctrl+r&quot;</span>], </span><br><span class="line"><span class="string">&quot;command&quot;</span>: <span class="string">&quot;repl_open&quot;</span>,                  </span><br><span class="line"><span class="string">&quot;caption&quot;</span>: <span class="string">&quot;Python - RUN current file&quot;</span>,                 </span><br><span class="line"><span class="string">&quot;mnemonic&quot;</span>: <span class="string">&quot;R&quot;</span>,                 </span><br><span class="line"><span class="string">&quot;args&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;type&quot;</span>: <span class="string">&quot;subprocess&quot;</span>,</span><br><span class="line"><span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line"><span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python3&quot;</span>, <span class="string">&quot;-u&quot;</span>, <span class="string">&quot;-i&quot;</span>, <span class="string">&quot;<span class="variable">$file_basename</span>&quot;</span>],</span><br><span class="line"><span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$file_path</span>&quot;</span>,</span><br><span class="line"><span class="string">&quot;syntax&quot;</span>: <span class="string">&quot;Packages/Python/Python.tmLanguage&quot;</span>,</span><br><span class="line"><span class="string">&quot;external_id&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line"><span class="string">&quot;extend_env&quot;</span>: &#123;<span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我设置了<code>ctrl+r</code>为<code>RUN current file</code>的快捷键。</p><p>到这里，Python在ST3的交互问题就全部搞定了，并且有了一个快捷键可以快速方便的执行交互类型的代码了。</p><p>参考：<a href="http://www.jasred.com/2014/05/12/setting-up-sublime-text-3-for-python3-development/">Setting Up Sublime Text 3 for Python3 Development</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天学Python时遇到如下代码：&lt;/p&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://junn.im/categories/Programming/"/>
    
    
    <category term="Python" scheme="http://junn.im/tags/Python/"/>
    
    <category term="Sublime Text 3" scheme="http://junn.im/tags/Sublime-Text-3/"/>
    
    <category term="SublimeREPL" scheme="http://junn.im/tags/SublimeREPL/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 3运行Python时控制台无法输出中文的解决方法</title>
    <link href="http://junn.im/2017/03/fix-the-encoding-problem-of-chinese-characters-biulding-with-python-in-sublimetext3/"/>
    <id>http://junn.im/2017/03/fix-the-encoding-problem-of-chinese-characters-biulding-with-python-in-sublimetext3/</id>
    <published>2017-03-24T16:00:00.000Z</published>
    <updated>2023-09-26T15:59:33.947Z</updated>
    
    <content type="html"><![CDATA[<p>想学Python，发现需要一个IDE来跑自己写的代码。Mac上有很多选择，自己最喜欢CodeRunner，轻量简单功能强大。就在准备掏钱的时候，发现Sublime Text 3也能打造成Python的IDE，只需安装几个Package就可以了，于是按照网上教程搞定。我输入了第一行Python代码：</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;你好&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后⌘+B运行，编译器报错。看了一下和中文字符有关系，这里涉及到Python编码问题。</p><p>在网上找了很多方法，解决方法都是一致的：在Sublime Text 3 中依次点击菜单Tools-&gt;build system-&gt;New build system，粘贴下方的代码并保存为Python.sublime-build，重启Sublime即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">    <span class="string">&quot;cmd&quot;</span>: [<span class="string">&quot;python&quot;</span>,<span class="string">&quot;-u&quot;</span>,<span class="string">&quot;<span class="variable">$file</span>&quot;</span>],  </span><br><span class="line">    <span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;^[ ]*File \&quot;(...*?)\&quot;, line ([0-9]*)&quot;</span>,  </span><br><span class="line">    <span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.python&quot;</span>,  </span><br><span class="line">    <span class="string">&quot;encoding&quot;</span>: <span class="string">&quot;cp936&quot;</span>  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><strong>但以上代码对我的Sublime Text 3无效</strong>。于是继续寻找解决方法，通过<a href="https://www.v2ex.com/t/163786">《TL;DR - 有关 Python 2 和 Sublime Text 中文 Unicode 编码问题的分析与理解》</a><a href="https://www.v2ex.com/t/269405">《Sublime 3 用 Ctrl+B 运行打印中文就报错是什么原因?》</a><a href="https://wslark.wordpress.com/2016/07/27/">《在Sublime Text中使用不同的python版本》</a>，我终于有点头绪。在默认情况下，Sublime Text 3里的Python 3的<code>sys.stdout.encoding</code>输出为UTF-8，但我的<code>sys.stdout.encoding</code>输出却为US-ASCII，可以通过修改<code>PYTHONIOENCODING</code>来改变<code>sys.stdout.encoding</code>的编码。</p><p>在夜深人静的晚上，我通过近两个小时的寻找解决方法，不断摸索，对上述代码进行了修改，Sublime Text 3中的Python 3终于能输出中文了!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">    <span class="string">&quot;shell_cmd&quot;</span>: <span class="string">&quot;python3 -u \&quot;<span class="variable">$file</span>\&quot;&quot;</span>,  </span><br><span class="line">    <span class="string">&quot;file_regex&quot;</span>: <span class="string">&quot;^[ ]*File \&quot;(...*?)\&quot;, line ([0-9]*)&quot;</span>,  </span><br><span class="line">    <span class="string">&quot;selector&quot;</span>: <span class="string">&quot;source.python&quot;</span>,  </span><br><span class="line">    <span class="string">&quot;env&quot;</span>: &#123;<span class="string">&quot;PYTHONIOENCODING&quot;</span>: <span class="string">&quot;utf-8&quot;</span>&#125;,</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>终于可以愉快的学习了。附修改前后Python的编码改变情况：</p><p>修改前：<br><img src="http://7xpqon.com1.z0.glb.clouddn.com/pythonmodify_before.png"><br>修改后：<br><img src="http://7xpqon.com1.z0.glb.clouddn.com/pythonmodify_after.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;想学Python，发现需要一个IDE来跑自己写的代码。Mac上有很多选择，自己最喜欢CodeRunner，轻量简单功能强大。就在准备掏钱的时候，发现Sublime Text 3也能打造成Python的IDE，只需安装几个Package就可以了，于是按照网上教程搞定。我输入了第一行Python代码：&lt;/p&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://junn.im/categories/Programming/"/>
    
    
    <category term="Python" scheme="http://junn.im/tags/Python/"/>
    
    <category term="Sublime Text 3" scheme="http://junn.im/tags/Sublime-Text-3/"/>
    
  </entry>
  
  <entry>
    <title>完善Plowshare使用体验</title>
    <link href="http://junn.im/2016/12/plowshare/"/>
    <id>http://junn.im/2016/12/plowshare/</id>
    <published>2016-12-27T16:00:00.000Z</published>
    <updated>2023-09-26T16:00:01.416Z</updated>
    
    <content type="html"><![CDATA[<p>过去的两个月中，我时常利用VPS配合plowshare下载国外网盘资源(<a href="http://junn.im/2016/using-vps-to-download-and-upload/">文</a>)。在实际操作中，我发现我使用的plowshare并没有完全支持Github中plowshare申明支持的<a href="https://github.com/mcrapet/plowshare-modules-legacy/blob/master/README.md">网盘清单</a>。</p><span id="more"></span><h2 id="寻找原因"><a href="#寻找原因" class="headerlink" title="寻找原因"></a>寻找原因</h2><p>《<a href="http://junn.im/2016/using-vps-to-download-and-upload/">利用VPS下载国外网盘资源并上传至百度云</a>》一文中我在CentOS 7安装完plowshare就发现<code>plowmod</code>命令无法使用。按照plowshare安装<a href="https://github.com/mcrapet/plowshare/blob/master/INSTALL">流程</a>，可以使用<code>plowmod --install</code>这句命令安装外部模块（external modules），也就是网盘模块，但我每次都不成功，终端显示<code>-bash: plowmod: command not found</code>，无法找到此命令，说明在我安装的plowshare中不存在<code>plowmod</code>这个功能。于是我去查看了Debian系统中plowshare的<a href="https://packages.debian.org/sid/plowshare">官方包</a>和CentOS的<a href="https://pkgs.org/centos-7/epel-x86_64/plowshare-1.0.6-1.el7.noarch.rpm.html">包</a>，发现两者的plowshare居然差了一个大版本，前者版本号已经是2.1.5，后者版本号才1.0.6。所以我判断原因是CentOS下的plowshare版本过低导致其中缺少<code>plowmod</code>功能。</p><h2 id="重新安装plowshare"><a href="#重新安装plowshare" class="headerlink" title="重新安装plowshare"></a>重新安装plowshare</h2><p>因为plowshare在CentOS中版本过低，所以将VPS系统设置成Debian就可以安装最新的plowshare。于是我重装了我的VPS，系统设置为Debian，并在Debian中安装plowshare。在安装过程中发现，Debian找不到plowshare，通过在Github中提交<a href="https://github.com/mcrapet/plowshare/issues/76">issue</a>我知道Debian Jessie中plowshare也是老版本并且名字叫<code>plowshare4</code>，先得安装<code>plowshare4</code>才能再安装新版的plowshare（注：我安装的时候Debian的plowshare还是2.1.5版，需要通过如下方法安装升级，现已变成2.1.6版，应该可以直接安装）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@alpha:~<span class="comment"># sudo apt-get update</span></span><br><span class="line">Get:1 http://security.debian.org jessie/updates InRelease [63.1 kB]</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">Get:22 http://ftp.debian.org jessie-updates/non-free amd64 Packages [516 B]</span><br><span class="line">Fetched 12.5 MB <span class="keyword">in</span> 49s (255 kB/s)</span><br><span class="line">Reading package lists... Done</span><br><span class="line">root@alpha:~<span class="comment"># apt-get install plowshare</span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree... Done</span><br><span class="line">E: Unable to locate package plowshare</span><br><span class="line">root@alpha:~<span class="comment"># apt-get install plowshare4</span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree... Done</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">Setting up plowshare4 (1.0.5-1+deb8u1) ...</span><br></pre></td></tr></table></figure><p>可以在代码中发现无法直接安装plowshare（<code>E: Unable to locate package plowshare</code>），只能安装plowshare4，而plowshare4的版本只有1.0.5，比CentOS的plowshare版本都要低，仍旧无法使用<code>plowmod</code>，所以下一步需要升级plowshare。</p><h2 id="升级plowshare"><a href="#升级plowshare" class="headerlink" title="升级plowshare"></a>升级plowshare</h2><p>在issue中，<a href="https://github.com/mcrapet/plowshare/issues/76#issuecomment-267489556">arcresu</a>告诉了我如何升级plowshare：</p><blockquote><p>To get the latest versions you should <a href="https://backports.debian.org/Instructions/">enable jessie backports</a> and then perform an update which will replace the plowshare4 package with plowshare at version 2.1.5</p></blockquote><p>按照arcresu给出的<a href="https://backports.debian.org/Instructions/">Instructions页面</a>，第一步我需要添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb http://ftp.debian.org/debian jessie-backports main</span><br></pre></td></tr></table></figure><p>这句命令至<code>sources.list</code>这个文件(Add backports to your sources.list)。于是我又开始在网上寻找<a href="http://askubuntu.com/a/197709">如何在Debian添加命令至文件</a>。在终端中依次使用如下命令，每行回车即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb http://ftp.debian.org/debian jessie-backports main&quot;</span> | sudo <span class="built_in">tee</span> -a /etc/apt/sources.list</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>按照Instructions，在添加完命令后我需要从backports中安装plowshare这个包(Install a package from backports)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@alpha:~<span class="comment"># apt-get -t jessie-backports install &quot;plowshare&quot;</span></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">The following extra packages will be installed:</span><br><span class="line">  plowshare4</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  plowshare</span><br><span class="line">The following packages will be upgraded:</span><br><span class="line">  plowshare4</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">Setting up plowshare (2.1.5-1~bpo8+1) ...</span><br><span class="line">Setting up plowshare4 (2.1.5-1~bpo8+1) ...</span><br></pre></td></tr></table></figure><p>可以看到plowshare都更新成2.1.5版了。按照plowshare的安装说明，最好再安装一下git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@beta:~<span class="comment"># apt-get install git</span></span><br></pre></td></tr></table></figure><p>然后<code>plowmod</code>命令终于可以运行了!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@alpha:~<span class="comment"># plowmod --install</span></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">root@alpha:~<span class="comment"># plowmod --update</span></span><br></pre></td></tr></table></figure><p>至此，VPS安装最新版plowshare完成，看看plowshare支持国外网盘的完整列表吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">root@alpha:~<span class="comment"># plowdown --modules</span></span><br><span class="line">115</span><br><span class="line">180upload</span><br><span class="line">1fichier</span><br><span class="line">2shared</span><br><span class="line">4share_vn</span><br><span class="line">4shared</span><br><span class="line">anonfiles</span><br><span class="line">bayfiles</span><br><span class="line">bayimg</span><br><span class="line">bigfile</span><br><span class="line">billionuploads</span><br><span class="line">bitshare</span><br><span class="line">catshare</span><br><span class="line">chomikuj</span><br><span class="line">crocko</span><br><span class="line">data_hu</span><br><span class="line">datafile</span><br><span class="line">dataport_cz</span><br><span class="line">depositfiles</span><br><span class="line">divshare</span><br><span class="line">dl_free_fr</span><br><span class="line">espafiles</span><br><span class="line">euroshare_eu</span><br><span class="line">faststore</span><br><span class="line">fboom_me</span><br><span class="line">filebin_ca</span><br><span class="line">filecloud</span><br><span class="line">filecore</span><br><span class="line">filedais</span><br><span class="line">filefactory</span><br><span class="line">filejoker</span><br><span class="line">fileover</span><br><span class="line">filepost</span><br><span class="line">filepup_net</span><br><span class="line">filer_net</span><br><span class="line">fileshark</span><br><span class="line">firedrive</span><br><span class="line">flashx</span><br><span class="line">freakshare</span><br><span class="line">fshare_vn</span><br><span class="line">gamefront</span><br><span class="line">ge_tt</span><br><span class="line">gfile_ru</span><br><span class="line">hdstream_to</span><br><span class="line">hexupload</span><br><span class="line">hipfile</span><br><span class="line">hotlink_cc</span><br><span class="line">keep2share</span><br><span class="line">letitbit</span><br><span class="line">lunaticfiles</span><br><span class="line">mediafire</span><br><span class="line">megashares</span><br><span class="line">multiupload</span><br><span class="line">myvdrive</span><br><span class="line">nakido</span><br><span class="line">netkups</span><br><span class="line">netload_in</span><br><span class="line">nitroflare</span><br><span class="line">nowdownload_co</span><br><span class="line">oboom</span><br><span class="line">openload</span><br><span class="line">prefiles</span><br><span class="line">promptfile</span><br><span class="line">rapidgator</span><br><span class="line">rapidu</span><br><span class="line">rghost</span><br><span class="line">ryushare</span><br><span class="line">salefiles</span><br><span class="line">sendspace</span><br><span class="line">sharebeast</span><br><span class="line">sharehost</span><br><span class="line">shareonline_biz</span><br><span class="line">sockshare</span><br><span class="line">solidfiles</span><br><span class="line">tempsend</span><br><span class="line">tempshare</span><br><span class="line">tezfiles</span><br><span class="line">thefilebay</span><br><span class="line">turbobit</span><br><span class="line">uloz_to</span><br><span class="line">ultramegabit</span><br><span class="line">uplea</span><br><span class="line">upload_cd</span><br><span class="line">uploadboy</span><br><span class="line">uploaded_net</span><br><span class="line">uploading</span><br><span class="line">uploadrocket</span><br><span class="line">upstore</span><br><span class="line">uptobox</span><br><span class="line">yourvideohost</span><br><span class="line">zalaa</span><br><span class="line">ziddu</span><br><span class="line">zippyshare</span><br></pre></td></tr></table></figure><p>一共支持93个网盘，当然其中有一些网盘在使用过程中需要高级账户，不过想想利用<code>plowshare</code>然后配合<code>9kw.eu</code>的CAPTCHA读取功能，让VPS代劳帮你下载网盘资源，还是比较惬意的事。</p><h2 id="安装bypy"><a href="#安装bypy" class="headerlink" title="安装bypy"></a>安装bypy</h2><p>如果还需要上传到百度云，则可再安装bypy。由于bypy程序依赖，需要将vps的系统区域编码设置为UTF-8，具体见<a href="https://github.com/houtianze/bypy">官方中文说明</a></p><p>bypy安装步骤和在CentOS中<a href="http://junn.im/2016/using-vps-to-download-and-upload/">安装步骤</a>类似：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python-pip</span><br><span class="line">apt-get upgrade python-pip</span><br><span class="line">pip install requests</span><br><span class="line">pip install -U requests</span><br><span class="line">pip install bypy</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果遇到</span></span><br><span class="line">ImportError: cannot import name <span class="string">&#x27;IncompleteRead&#x27;</span></span><br><span class="line">先</span><br><span class="line">apt-get remove python-pip</span><br><span class="line">然后</span><br><span class="line">easy_install -U pip</span><br><span class="line">pip install bypy</span><br></pre></td></tr></table></figure><p><strong>声明：我是代码小白，以上步骤和代码仅供参考。</strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;过去的两个月中，我时常利用VPS配合plowshare下载国外网盘资源(&lt;a href=&quot;http://junn.im/2016/using-vps-to-download-and-upload/&quot;&gt;文&lt;/a&gt;)。在实际操作中，我发现我使用的plowshare并没有完全支持Github中plowshare申明支持的&lt;a href=&quot;https://github.com/mcrapet/plowshare-modules-legacy/blob/master/README.md&quot;&gt;网盘清单&lt;/a&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://junn.im/categories/Programming/"/>
    
    
    <category term="plowshare" scheme="http://junn.im/tags/plowshare/"/>
    
  </entry>
  
  <entry>
    <title>Mac使用aria2下载百度云资源</title>
    <link href="http://junn.im/2016/10/download-from-baiduyun-using-aria2/"/>
    <id>http://junn.im/2016/10/download-from-baiduyun-using-aria2/</id>
    <published>2016-10-27T16:00:00.000Z</published>
    <updated>2023-09-26T16:00:21.891Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇写到了使用VPS下载国外网盘资源并将资源上传至百度云，费时费力绕这么大一圈把资源搬回墙内最终目的还是为了下载。作为国内唯一还能「一用」的大公司网盘，用户体验自然差到极点，8秒小电影、无理由限制上传下载速度都是家常便饭。</p><span id="more"></span><p>我曾利用Tampermonkey里的百度云脚本获取可以在迅雷中使用的下载链接，这些脚本经常被百度封杀，不是长久之计，直到后来我发现了aria2这一利器。</p><h2 id="什么是aria2"><a href="#什么是aria2" class="headerlink" title="什么是aria2"></a>什么是aria2</h2><blockquote><p>aria2 is a lightweight multi-protocol &amp; multi-source command-line download utility. It supports HTTP&#x2F;HTTPS, FTP, SFTP, BitTorrent and Metalink. aria2 can be manipulated via built-in JSON-RPC and XML-RPC interfaces. (<a href="https://aria2.github.io/">摘自aria2官网</a>)</p></blockquote><p>简单来说就是有以下特性:</p><ul><li>支持多协议: HTTP &#x2F; HTTPS，FTP，SFTP，BitTorrent和Metalink</li><li>多线程连线：aria2 会自动从多个线程下载文件，并充分利用你的带宽；</li><li>轻量：运行时不会占用过多资源；</li><li>全功能 BitTorrent 客户端，可以当BT客户端使用；</li><li>支持 RPC 界面远程控制</li></ul><h2 id="安装aria2"><a href="#安装aria2" class="headerlink" title="安装aria2"></a>安装aria2</h2><p>以Mac为例，安装方法有两种：</p><p>1.从aria2的<a href="https://github.com/aria2/aria2/releases">release</a>中下载安装<code>Latest release</code>中的对应系统的<code>Downloads</code><br>2.使用<code>Homebrew</code>安装，在「终端」中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install aria2</span><br></pre></td></tr></table></figure><p>就可以安装aria2，前提是Mac中已经安装有<code>Homebrew</code>，如提示没有可以前往<a href="http://brew.sh/index_zh-cn.html">官网</a>照着说明安装。在安装过程中「终端」可能还会提示要安装Xcode中的一款工具<code>Command Line Tools</code>，照着指示，输入命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure><h2 id="配置aria2"><a href="#配置aria2" class="headerlink" title="配置aria2"></a>配置aria2</h2><p>软件安装完成了，需要对软件进行一下配置。对于aria2这类软件需要自己编写一个配置文件。</p><p>aria2 提供两种方式使用，一种是直接命令行模式下载，不推荐使用这种方法，推荐使用另外一种 RPC 模式，这种方式 aria 启动之后只会安静的等待下载请求，下载完成后也只会安静的驻留后台不会自动退出。而使用RPC模式推荐做一个配置文件<code>aria2.conf</code>方便使用。我们把配置文件<code>aria2.conf</code>放在路径 <code>~/.aria2 </code>下，在「终端」中依次逐行输入命令，并回车：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">mkdir</span> .aria2</span><br><span class="line"><span class="built_in">cd</span> .aria2</span><br><span class="line"><span class="built_in">touch</span> aria2.conf</span><br></pre></td></tr></table></figure><p>接着打开 Finder，利用 Shift+Cmd+G 进入路径：<code>~/.aria2/aria2.conf</code>，用<code>Sublime Text</code>、<code>Notepad+++</code>这一类编辑器打开 <code>aria2.conf</code>，如果只是下载百度云资源，可以使用<a href="https://blog.icehoney.me/posts/2015-01-31-Aria2-download">雪月秋水君</a>提供的配置拷贝进去(其余配置可参考<a href="http://aria2c.com/usage.html">此文</a>)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#用户名</span></span><br><span class="line"><span class="comment">#rpc-user=user</span></span><br><span class="line"><span class="comment">#密码</span></span><br><span class="line"><span class="comment">#rpc-passwd=passwd</span></span><br><span class="line"><span class="comment">#上面的认证方式不建议使用,建议使用下面的token方式</span></span><br><span class="line"><span class="comment">#设置加密的密钥</span></span><br><span class="line"><span class="comment">#rpc-secret=token</span></span><br><span class="line"><span class="comment">#允许rpc</span></span><br><span class="line">enable-rpc=<span class="literal">true</span></span><br><span class="line"><span class="comment">#允许所有来源, web界面跨域权限需要</span></span><br><span class="line">rpc-allow-origin-all=<span class="literal">true</span></span><br><span class="line"><span class="comment">#允许外部访问，false的话只监听本地端口</span></span><br><span class="line">rpc-listen-all=<span class="literal">true</span></span><br><span class="line"><span class="comment">#RPC端口, 仅当默认端口被占用时修改</span></span><br><span class="line"><span class="comment">#rpc-listen-port=6800</span></span><br><span class="line"><span class="comment">#最大同时下载数(任务数), 路由建议值: 3</span></span><br><span class="line">max-concurrent-downloads=5</span><br><span class="line"><span class="comment">#断点续传</span></span><br><span class="line"><span class="built_in">continue</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#同服务器连接数</span></span><br><span class="line">max-connection-per-server=5</span><br><span class="line"><span class="comment">#最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要</span></span><br><span class="line">min-split-size=10M</span><br><span class="line"><span class="comment">#单文件最大线程数, 路由建议值: 5</span></span><br><span class="line"><span class="built_in">split</span>=10</span><br><span class="line"><span class="comment">#下载速度限制</span></span><br><span class="line">max-overall-download-limit=0</span><br><span class="line"><span class="comment">#单文件速度限制</span></span><br><span class="line">max-download-limit=0</span><br><span class="line"><span class="comment">#上传速度限制</span></span><br><span class="line">max-overall-upload-limit=0</span><br><span class="line"><span class="comment">#单文件速度限制</span></span><br><span class="line">max-upload-limit=0</span><br><span class="line"><span class="comment">#断开速度过慢的连接</span></span><br><span class="line"><span class="comment">#lowest-speed-limit=0</span></span><br><span class="line"><span class="comment">#验证用，需要1.16.1之后的release版本</span></span><br><span class="line"><span class="comment">#referer=*</span></span><br><span class="line"><span class="comment">#文件保存路径, 默认为当前启动位置</span></span><br><span class="line"><span class="built_in">dir</span>=/Users/xxx/Downloads</span><br><span class="line"><span class="comment">#文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本</span></span><br><span class="line"><span class="comment">#disk-cache=0</span></span><br><span class="line"><span class="comment">#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)</span></span><br><span class="line"><span class="comment">#enable-mmap=true</span></span><br><span class="line"><span class="comment">#文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长</span></span><br><span class="line"><span class="comment">#所需时间 none &lt; falloc ? trunc « prealloc, falloc和trunc需要文件系统和内核支持</span></span><br><span class="line">file-allocation=prealloc</span><br></pre></td></tr></table></figure><p>默认下载路径的<code>/Users/xxx/Downloads</code>可以改为任何你想要的绝对路径。此处 Downloads 为下载目录，xxx 请自行替换成你的 Mac 用户名，然后保存，退出编辑器。</p><h2 id="启动aria2"><a href="#启动aria2" class="headerlink" title="启动aria2"></a>启动aria2</h2><p>安装配置完就可以使用aria2了，在终端中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aria2c --conf-path=<span class="string">&quot;/Users/xxx/.aria2/aria2.conf&quot;</span> -D</span><br></pre></td></tr></table></figure><p>xxx 请自行替换成你的 Mac 用户名，aria2就启动了。</p><h2 id="使用aria2"><a href="#使用aria2" class="headerlink" title="使用aria2"></a>使用aria2</h2><p>aria2是一个命令行下载器(command-line download utility)，官网也给出了命令行下载说明，它没有用户操作界面(GUI)。不过还是有大神制作了两款在线GUI：<a href="http://binux.github.io/yaaw/demo/">YAAW</a>和<a href="http://ziahamza.github.io/webui-aria2/">Aria2 WebUI</a>。Mac还有相应的桌面客户端<a href="https://github.com/yangshun1029/aria2gui">Aria2GUI</a>。</p><p>操作界面有了，还需要一个插件打通百度云和aria2，这个就是<a href="https://github.com/acgotaku/BaiduExporter">BaiduExporter</a>。可惜因某些原因，这个插件已经在Chrome的官方商店下架了。每次使用需要重新安装，比较麻烦，貌似在这有<a href="https://hencolle.com/2016/10/16/baidu_exporter/">解决办法</a>，我没试过。</p><p>安装完成后进入百度云的下载界面，会发现网页上多出一个「导出下载」按钮，点击它弹出的「ARIA2 RPC」就自动添加到你的下载队列里了。<br><img src="http://ww2.sinaimg.cn/large/72f96cbagw1f99dqm7ffwj20yg0cwgnl.jpg"><br>然后我们可以在管理界面看到下载信息了。<br><img src="http://ww2.sinaimg.cn/large/72f96cbagw1f99ds8mp76j20yg0i6wgg.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;上一篇写到了使用VPS下载国外网盘资源并将资源上传至百度云，费时费力绕这么大一圈把资源搬回墙内最终目的还是为了下载。作为国内唯一还能「一用」的大公司网盘，用户体验自然差到极点，8秒小电影、无理由限制上传下载速度都是家常便饭。&lt;/p&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://junn.im/categories/Programming/"/>
    
    
    <category term="百度云" scheme="http://junn.im/tags/%E7%99%BE%E5%BA%A6%E4%BA%91/"/>
    
    <category term="aria2" scheme="http://junn.im/tags/aria2/"/>
    
    <category term="Mac" scheme="http://junn.im/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>利用VPS下载国外网盘资源并上传至百度云</title>
    <link href="http://junn.im/2016/10/using-vps-to-download-and-upload/"/>
    <id>http://junn.im/2016/10/using-vps-to-download-and-upload/</id>
    <published>2016-10-19T16:00:00.000Z</published>
    <updated>2023-09-26T16:00:21.923Z</updated>
    
    <content type="html"><![CDATA[<p>最近需要下载国外网盘资源，无奈部分国外网盘被和谐，即使没被和谐的网盘下载速度和稳定性都不甚理想。曾经听说利用VPS可以下载国外网盘资源，正好自己手上也有闲置的VPS，我决定亲自实践一下利用VPS下载国外网盘资源，并且最后将此资源上传到百度云，在国内可以正常下载。</p><span id="more"></span><p><strong>首先声明：自己是代码小白，以下内容均是自己尝试出来的，如有错误请指正。</strong></p><p>需要工具：</p><ol><li>一个VPS服务。内存至少256M，最好512M以上；硬盘容量因人而异；流量一般都用不完。</li><li><a href="https://github.com/mcrapet/plowshare">Plowshare</a>，开源软件，下载国外网盘资源工具。</li><li><a href="https://www.9kw.eu/index.html">9kw.eu</a>，一个用来识别国外网盘Captcha的<strong>付费</strong>服务。</li><li><a href="https://github.com/houtianze/bypy">bypy</a>，国人开发的百度云的python客户端，可以实现上传同步等功能。</li><li>Mac系统: 终端(Terminal.app); Windows系统: PuTTY</li></ol><h2 id="第一步-配置VPS操作系统"><a href="#第一步-配置VPS操作系统" class="headerlink" title="第一步 配置VPS操作系统"></a>第一步 配置VPS操作系统</h2><p>我一开始用的是Vultr最基础的套餐，每月5刀的那种。选择<code>Vultr Cloud Compute(VC2)</code>，<code>Server Location</code>可以选<code>Tokyo</code>，理论上离的越近，延迟越少。<code>Server Type</code>选择<code>64 bit OS</code>，点击<code>CentOS 7 x64</code>，<code>Server Size</code>选择<code>$5/mo</code>(土豪请随意)，后面的<code>Additional Features</code>之类的按照默认，最后点击<code>Deploy Now</code>。操作系统最好选择CentOS 7，因为这个版本的系统默认的Python版本是2.7.5，而后面要用到的bypy依赖2.7+的Python才能运行。查看系统Python版本可用如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -V</span><br></pre></td></tr></table></figure><p>几分钟之后，VPS部署完毕，记下VPS的IP地址和密码。</p><h2 id="第二步-在VPS中安装Plowshare"><a href="#第二步-在VPS中安装Plowshare" class="headerlink" title="第二步 在VPS中安装Plowshare"></a>第二步 在VPS中安装Plowshare</h2><p>1.SSH</p><p>在安装Plowshare之前，得先通过SSH登录进VPS。Mac使用自带的终端就可以了，Windows可以使用PuTTY。以Mac为例，在终端中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@你的VPS的IP地址</span><br></pre></td></tr></table></figure><p>然后会提示你输入密码，复制粘贴即可。粘贴完密码后，终端不会显示密码，只需摁下回车键即可登录进VPS。</p><p>2.安装<a href="https://github.com/mcrapet/plowshare">Plowshare</a></p><p>按照<a href="https://github.com/mcrapet/plowshare/blob/master/INSTALL">此页面</a>安装。CentOS系统在终端中使用如下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install plowshare</span><br></pre></td></tr></table></figure><p>在Vultr的CentOS中，我使用上面的代码安装Plowshare成功，但在AlphaRacks的VPS中，我使用同样代码却出现问题，出现如下文字：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">没有可用软件包 plowshare。</span><br><span class="line">错误：无须任何处理</span><br></pre></td></tr></table></figure><p>我在网上寻寻觅觅，在这个<a href="https://pkgs.org/centos-7/epel-x86_64/plowshare-1.0.6-1.el7.noarch.rpm.html">网页</a>寻找到答案：</p><blockquote><p>Download plowshare-1.0.6-1.el7.noarch.rpm for CentOS 7 from the EPEL repository.</p></blockquote><p>看到上面这句话我想，可能是因为AlphaRacks的CentOS缺少了<code>EPEL repository</code>，导致plowshare无法下载。于是需要先在VPS中安装<code>EPEL repository</code>，在网上寻觅到如下代码安装EPEL：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure><p>安装EPEL后，Plowshare安装成功。</p><p>3.安装Plowshare的外部模块</p><p>在Plowshare的Introduction中有这么一句话：</p><blockquote><p>Plowshare itself doesn’t support any websites (named module). It’s just the core engine. Concerning modules, few are available separately and must be installed in user directory</p></blockquote><p>Plowshare只是一个引擎(core engine)，真正起作用能下载这些国外网盘的是外部的模块(module)。所以安装完Plowshare后还要安装外部模块，按照<a href="https://github.com/mcrapet/plowshare/blob/master/INSTALL">这个页面</a>最后的代码<code>Installation (external modules)</code>，我试了<code>Automatic method: using plowmod</code>，没用。于是使用了<code>Manual method: from sources</code>，成功安装。在终端中逐行输入以下代码，每输完一行敲一下回车键。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/.config/plowshare/modules.d</span><br><span class="line"><span class="built_in">cd</span> ~/.config/plowshare/modules.d</span><br><span class="line">curl -L -k https://github.com/mcrapet/plowshare-modules-legacy/archive/master.tar.gz | tar zxf -</span><br><span class="line"><span class="built_in">mv</span> plowshare-modules-legacy-master legacy</span><br><span class="line"><span class="comment"># vim:fileencoding=utf-8</span></span><br><span class="line"><span class="built_in">cd</span></span><br></pre></td></tr></table></figure><p>到此，Plowshare安装全部完成。可以在终端输入<code>plowdown -h</code>显示帮助文档，输入<code>plowdown --modules</code>显示目前模块支持的网盘，发现居然还有115网盘(然后并有什么x用，如果支持yunfile就好了)。在帮助文档中还有一行代码比较重要：</p><blockquote><p>–9kweu&#x3D;KEY           9kw.eu captcha (API) key</p></blockquote><p>9kw.eu，是一个用来识别captcha的服务。下载过国外网盘资源的人都知道，这些网盘都需要看图识字(captcha)输入验证码才能下载资源，而9kw.eu正是一个自动识别captcha的服务，对于资源下载至关重要。Plowshare好像还有其他captcha识别服务，我没试过。</p><h2 id="第三步-注册9kw-eu服务"><a href="#第三步-注册9kw-eu服务" class="headerlink" title="第三步 注册9kw.eu服务"></a>第三步 注册9kw.eu服务</h2><p>注册过程不叙述了，不过<a href="9kw.eu">9kw.eu</a>这服务不是免费的，需要付费：4000次captcha服务(submit)，收费5欧。对于没有比特币的我来说只能使用坑爹的Paypal，5欧收了我38块多，Paypal这汇率…不过还算便宜，40元RMB支持识别4000次，1分钱识别1次，可以接受。注册付费完之后，在后台可以获取Plowshare的专属API，就是<code>--9kweu=KEY</code>中的KEY。</p><p>接下去就是下载资源了，使用如下格式，注意空格：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plowdown --9kweu=你的Plowshare专属API 你的资源网址链接</span><br></pre></td></tr></table></figure><p>静等下载吧。</p><h2 id="第四步-安装bypy"><a href="#第四步-安装bypy" class="headerlink" title="第四步 安装bypy"></a>第四步 安装bypy</h2><p><a href="https://github.com/houtianze/bypy">bypy</a>是一个百度云网盘的Python客户端，可在Linux环境下通过命令行来操作。在本文的操作环境下，安装byby需要更多的步骤，byby官网没有介绍那么详细，所以我参考了其他网友的教程。</p><p>1.安装 Git (此步骤可省略)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><p>2.安装Python Pip</p><p>如果在前面已安装过EPEL，则这边输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install python-pip</span><br><span class="line">yum clean all</span><br></pre></td></tr></table></figure><p>如果没有安装过EPEL，则输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install python-pip</span><br><span class="line">yum clean all</span><br></pre></td></tr></table></figure><p>3.安装Python Requests库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests</span><br></pre></td></tr></table></figure><p>4.安装bypy</p><p>完成以上步骤后，才开始正式安装bypy。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install bypy</span><br></pre></td></tr></table></figure><p>第一次运行时需要百度网盘授权，只需跑任何一个命令（比如 <code>bypy.py info</code>）然后跟着说明（登陆等）来授权即可。授权只需一次，一旦成功，以后不会再出现授权提示。运行<code>bypy.py info</code>是这样的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bypy.py info</span><br><span class="line">Please visit: https://openapi.baidu.com/xxxxxx</span><br><span class="line">And authorize this app</span><br><span class="line">Paste the Authorization Code here within 10 minutes.</span><br><span class="line">Press [Enter] when you are <span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>在浏览器中打开 <code>https://openapi.baidu.com/xxxxxx</code> 这个网址，百度会反馈一段<code>Authorization Code</code>，复制粘贴到终端，摁回车键即可。到此bypy也装好了，等资源下载完，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bypy.py upload</span><br></pre></td></tr></table></figure><p>就能将资源搬回百度网盘了。</p><p>接下去再谈谈我使用的VPS下载上传速度。</p><p>我只使用了Vultr家的最基础的<code>$5/mo</code>套餐和AlphaRacks家的<code>Hot Summer Special - Linux 768MB</code>套餐，两家配置如下：</p><table><thead><tr><th align="center"></th><th align="center">Vultr</th><th align="center">AlphaRacks</th></tr></thead><tbody><tr><td align="center">CPU</td><td align="center">1核</td><td align="center">1核</td></tr><tr><td align="center">内存</td><td align="center">768MB</td><td align="center">768MB</td></tr><tr><td align="center">硬盘</td><td align="center">15GB</td><td align="center">15GB</td></tr><tr><td align="center">流量</td><td align="center">1TB</td><td align="center">1TB</td></tr><tr><td align="center">位置</td><td align="center">新加坡</td><td align="center">洛杉矶</td></tr><tr><td align="center">价格</td><td align="center">5刀&#x2F;月</td><td align="center">11刀&#x2F;年</td></tr></tbody></table><p>分别在<code>rapidgator.net</code>,<code>uploaded.net</code>,<code>keep2share.cc</code>三个国外网盘进行过下载并上传到百度云。下载上传速率如下表：</p><table><thead><tr><th align="center">kb&#x2F;s</th><th align="center">rapidgator.net</th><th align="center">uploaded.net</th><th align="center">keep2share.cc</th><th align="center">百度云上传速度</th></tr></thead><tbody><tr><td align="center">Vultr</td><td align="center">60-80</td><td align="center">40-60</td><td align="center">没下载</td><td align="center">80-100, 800kb&#x2F;s(Max)</td></tr><tr><td align="center">AlphaRacks</td><td align="center">70-100</td><td align="center">40-80</td><td align="center">50-60</td><td align="center">200-300, 1M&#x2F;s(Max)</td></tr></tbody></table><p>可以看出虽然Vultr名声很大，但差不多配置下，AlphaRacks家的VPS上传下载速度更快，而且更便宜。所以我更推荐AlphaRacks。点击进入<a href="https://www.alpharacks.com/myrack/aff.php?aff=830">AlphaRacks</a>，或者进入<a href="https://www.alpharacks.com/myrack/aff.php?aff=830&pid=201">AlphaRacks<code>Hot Summer Special - Linux 768MB</code>套餐</a>。</p><p>以上就是利用VPS来下载国外网盘资源并上传到百度云的全过程。虽然这个过程比较复杂，还要付费购买一些服务(也不算贵)，但是和在墙内寻找这些被墙的资源所浪费的时间和等待极不稳定时常断线的国外网盘慢速下载所浪费的时间相比，这点花费真不算什么，况且某些服务还有其他妙用。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近需要下载国外网盘资源，无奈部分国外网盘被和谐，即使没被和谐的网盘下载速度和稳定性都不甚理想。曾经听说利用VPS可以下载国外网盘资源，正好自己手上也有闲置的VPS，我决定亲自实践一下利用VPS下载国外网盘资源，并且最后将此资源上传到百度云，在国内可以正常下载。&lt;/p&gt;</summary>
    
    
    
    <category term="Programming" scheme="http://junn.im/categories/Programming/"/>
    
    
    <category term="vps" scheme="http://junn.im/tags/vps/"/>
    
    <category term="网盘" scheme="http://junn.im/tags/%E7%BD%91%E7%9B%98/"/>
    
    <category term="百度云" scheme="http://junn.im/tags/%E7%99%BE%E5%BA%A6%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>我与ingress</title>
    <link href="http://junn.im/2016/04/ingress/"/>
    <id>http://junn.im/2016/04/ingress/</id>
    <published>2016-04-20T16:00:00.000Z</published>
    <updated>2023-09-26T16:00:21.940Z</updated>
    
    <content type="html"><![CDATA[<p>今天小雨，上班路上我打开了ingress，8:08am，我hack了一尊铜像portal，于是我获得了「Sojourner」的黑色徽章。「Sojourner」黑色徽章应该算是ingress中难度最大的几个成就之一，能坚持360天不中断签到连我自己也没想到。</p><span id="more"></span><center>![](http://7xpqon.com1.z0.glb.clouddn.com/sojourner.JPG)</center><p><strong>结缘</strong></p><p>自己已经记不起为什么会开始玩ingress。很早之前收到过Google的邮件，其中提到过ingress。在14年夏天，我下载了ingress，登录进去要选择阵营，一个Enlightened，一个是Resistance。对于一个有选择困难症的人来说，我放弃了选择。15年4月初，我又想到了这个游戏，安装登录，又回到了选择的界面，到底是选择绿色的Enlightened（俗称启蒙军）还是蓝色的Resistance（俗称抵抗军）？</p><blockquote><p>The Enlightened seek to harness the power of Exotic Matter to evolve mankind to a higher level.</p></blockquote><blockquote><p>The Resistance seek to battle the forces that are attempting to use Exotic Matter to enslave humanity.</p></blockquote><p>当时我看到两大阵营的描述就开始犯难了，我既想利用某种物质帮助人类进化到更高水平，也想防止人类在进化的过程中被奴役；既觉得启蒙军的logo好看，又觉得抵抗军的logo很酷。最后我点击了The Enlightened的按钮。原因是：</p><p><strong>蓝光伤眼！</strong>   </p><p>我自己也被这个理由所折服，估计没有人像我一样，因为这个原因选择阵营。在网上还有很多文章分析整营选择背后的心理因素，至少这些文章对我不适用。</p><p><strong>乐趣</strong></p><p>玩ingress一大乐趣是解锁成就获得徽章。不论是在《使命召唤》里扮演解放者还是在《魔兽世界》中扮演救世主，玩网游就是为了满足玩家的一点虚荣心，ingress也不例外。因此，ingress设置了一些成就，达到这些标准了，你就能获得一个徽章，比如签到360天、守住一个po150天等等。官方还会不定期举办活动，让全世界的玩家参与进来，这些活动还会有特殊的徽章，这也让很多玩家津津乐道。在这一年中，我去过几个城市，游玩的同时也会打开ingress探索这个城市。为了达到守住一个po150天的成就，我遍地留脚，最终达成。</p><p>ingress的最终目的是让人脱宅，探索世界，认识新朋友。在这一年里，为了玩ingress，我基本上跑遍了市区的有po的角落，深入田间地头、丘陵山包，甚至还差点被一人多高的狼狗追咬……玩ingress的这一年，我重新认识了这座城市，去了很多从未去过的地方。这是玩ingress的另一大乐趣。</p><p>除了探索城市，玩ingress最有意思的就是面基。想想在同一个城市有一个小伙伴和你一样，知道了这个游戏，千辛万苦「翻越高墙」登录进这个游戏，选择了自己的阵营，并在游戏中和你互动，这是一种很奇妙的感觉。在ingress里，我们都是Agent，在现实生活中，我们都是芸芸众生。你会迫切想见一见这个和你有相同兴趣的小伙伴，不论他&#x2F;她是哪个阵营。如果是相同阵营，我们会互相补给物资，拉近自己阵营的群，方便以后活动的沟通；如果是不同阵营，我们也会说一声“Hi”，交流一下游戏感受，并且互留联系方式。很多玩家都很友善，不分阵营，另外还有不同阵营的男女玩家牵手成功，完成了脱宅脱单的「跨越」。</p><p><strong>以后</strong></p><p>ingress虽然能让人脱宅脱单，但说到底它只是一个手机网游。有些玩家深陷游戏，导致两个阵营互相指责看不惯对发的情况时有发生，甚至还发生过暴力伤人事件，不过大部分玩家还是能分清虚拟和现实。如今，我对ingress的热情逐渐消退，特别是获得了几个难度很大的黑色徽章之后，我都不想打开游戏。平时工作生活已耗费太多的时间和精力，我已无暇去专门玩ingress了。如果有时间有兴致，我会出去玩一把，权当一种运动。</p><p><strong>更新：签到两年了</strong></p><p>2017年4月26日，ingress签到730天，我坚持了两年。现在基本不玩ingress了，成就定格在678天，唯一坚持下来的就只剩签到了，我想我会一直坚持签到下去，直到哪天我忘了签到或者哪天猩猩倒闭为止:)</p><center>![](http://7xpqon.com1.z0.glb.clouddn.com/sojourner_2y.png)</center><p><strong>更新：签到断了T-T</strong></p><p>2018年4月1日，我坚持了快3年的签到记录终于在这一天断了，数字定格在1069天（2018年3月31日数据）。</p><center>![](http://7xpqon.com1.z0.glb.clouddn.com/sojourner_End.jpg)</center><p>这一天都在陪女朋友，当了一天车夫，开车没机会签到。等有机会签到打开应用却没有po可签到，一直拖到快4月2日凌晨才发现还没签到，已经晚了。签到快三年了，在无意中断了签，真觉得有点可惜。</p><p>4月2日，ingress官方宣布取消Guardian徽章。虽然Guardian和Sojourner两个徽章我都已黑牌，但我觉得Sojourner徽章更难，长时间坚持就更难。碰巧4月1日还看了《头号玩家》，可能斯皮尔伯格叫我要回归现实吧。事实上现在都不怎么玩ingress了，每天打开ingress签到已成为我的一个习惯。</p><p>不管怎样，感谢ingress给我带来的快乐。期待ingress 2.0版。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;今天小雨，上班路上我打开了ingress，8:08am，我hack了一尊铜像portal，于是我获得了「Sojourner」的黑色徽章。「Sojourner」黑色徽章应该算是ingress中难度最大的几个成就之一，能坚持360天不中断签到连我自己也没想到。&lt;/p&gt;</summary>
    
    
    
    <category term="Life" scheme="http://junn.im/categories/Life/"/>
    
    
    <category term="ingress" scheme="http://junn.im/tags/ingress/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://junn.im/2016/04/helloworld/"/>
    <id>http://junn.im/2016/04/helloworld/</id>
    <published>2016-04-09T16:00:00.000Z</published>
    <updated>2023-09-26T16:00:21.732Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><p>if you have zero experience of Terminal.app or have never opened Terminal.app, follow this:</p><ol><li>open Terminal.app</li><li>install Homebrew:<br><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></li><li>install git: <code>brew install git</code></li><li>install Node.js: <code>brew install node</code></li><li>install Hexo: <code>npm install -g hexo-cli</code></li></ol><p>国内用户可能遇到Homebrew下载缓慢的情况，Homebrew支持全局socks代理，可在安装Homebrew前在bash中输入<code>export ALL_PROXY=socks5://127.0.0.1:portnumber</code>（将portnumber替换成你的socks代理端口），可显著<a href="https://www.zhihu.com/question/31360766/answer/149140490">提高</a>安装速度。</p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Create-a-new-About-page"><a href="#Create-a-new-About-page" class="headerlink" title="Create a new About page"></a>Create a new About page</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="http://stackoverflow.com/a/37501624/5735597">stackoverflow</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="Blog" scheme="http://junn.im/categories/Blog/"/>
    
    
    <category term="blog" scheme="http://junn.im/tags/blog/"/>
    
    <category term="hexo" scheme="http://junn.im/tags/hexo/"/>
    
    <category term="博客" scheme="http://junn.im/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
